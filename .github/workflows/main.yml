import React, { useState, useEffect } from 'react';

export default function App() {
  const [currentPage, setCurrentPage] = useState('dashboard');
  const [darkMode, setDarkMode] = useState(false);
  const [userData, setUserData] = useState({
    name: '‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ',
    level: 'Agency',
    totalEarning: 125690,
    monthlyEarning: 45230,
    directReferrals: 12,
    teamSize: 156,
    leftPV: 85000,
    rightPV: 67000
  });

  const [notifications, setNotifications] = useState([
    { id: 1, message: '‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ Together Bonus 2,400 ‡∏ö‡∏≤‡∏ó', time: '10 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß', type: 'earning' },
    { id: 2, message: '‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏ó‡∏µ‡∏°: ‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏°‡∏≤‡∏•‡∏µ', time: '2 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß', type: 'team' },
    { id: 3, message: '‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö Tell Your Bonus 900 ‡∏ö‡∏≤‡∏ó', time: '1 ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß', type: 'earning' }
  ]);

  const planData = [
    {
      id: 1,
      title: "Tell Your Bonus",
      subtitle: "‡∏Ñ‡πà‡∏≤‡∏ö‡∏≠‡∏Å‡∏ï‡πà‡∏≠",
      icon: "üí¨",
      color: "from-blue-500 to-cyan-600",
      percentage: "30%",
      description: "‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö 30% ‡∏à‡∏≤‡∏Å PV ‡∏Ç‡∏≠‡∏á‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥"
    },
    {
      id: 2,
      title: "Together Bonus",
      subtitle: "‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡∏°", 
      icon: "ü§ù",
      color: "from-purple-500 to-pink-600",
      percentage: "10%",
      description: "‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö 10% ‡∏à‡∏≤‡∏Å‡∏Ç‡∏≤‡∏ó‡∏µ‡πà‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤"
    },
    {
      id: 3,
      title: "5-Star Bonus",
      subtitle: "‡πÅ‡∏°‡∏ä‡∏ä‡∏¥‡πà‡∏á‡∏•‡∏π‡∏Å‡∏´‡∏•‡∏≤‡∏ô",
      icon: "‚≠ê",
      color: "from-yellow-500 to-orange-600",
      percentage: "5-20%",
      description: "Matching ‡∏à‡∏≤‡∏Å‡∏•‡∏π‡∏Å‡∏´‡∏•‡∏≤‡∏ô 5 ‡∏£‡∏∏‡πà‡∏ô"
    },
    {
      id: 4,
      title: "Passive PB",
      subtitle: "‡πÇ‡∏ö‡∏ô‡∏±‡∏™‡∏™‡∏∞‡∏™‡∏°‡∏ä‡πâ‡∏≠‡∏õ",
      icon: "üõçÔ∏è",
      color: "from-green-500 to-teal-600",
      percentage: "10%",
      description: "‡∏£‡∏∞‡∏ö‡∏ö‡∏£‡∏µ‡∏ß‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏•‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"
    },
    {
      id: 5,
      title: "Unity Bonus",
      subtitle: "President Only",
      icon: "üëë",
      color: "from-red-500 to-pink-600",
      percentage: "3%",
      description: "‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö President"
    }
  ];

  // Calculator States
  const [calcData, setCalcData] = useState({
    directMembers: 5,
    avgPV: 1000,
    leftPV: 50000,
    rightPV: 40000,
    level: 'Basic'
  });

  // Toggle Dark Mode
  useEffect(() => {
    if (darkMode) {
      document.documentElement.classList.add('dark');
    } else {
      document.documentElement.classList.remove('dark');
    }
  }, [darkMode]);

  // Dashboard Component
  const Dashboard = () => (
    <div className="space-y-8">
      {/* Hero Section with Animated Background */}
      <div className="relative overflow-hidden bg-gradient-to-br from-gray-900 via-black to-gray-800 rounded-3xl p-8 text-white border border-gray-700">
        {/* Animated Background Elements */}
        <div className="absolute inset-0 opacity-5">
          <div className="absolute top-10 left-10 w-32 h-32 bg-gradient-to-r from-gray-500 to-white rounded-full animate-pulse"></div>
          <div className="absolute bottom-10 right-10 w-48 h-48 bg-gradient-to-r from-gray-400 to-gray-600 rounded-full animate-bounce" style={{animationDuration: '3s'}}></div>
          <div className="absolute top-1/2 left-1/2 w-24 h-24 bg-gradient-to-r from-gray-300 to-gray-500 rounded-full animate-ping" style={{animationDuration: '2s'}}></div>
        </div>
        
        {/* Glowing Border Effect */}
        <div className="absolute inset-0 bg-gradient-to-r from-gray-600 via-gray-400 to-gray-600 rounded-3xl opacity-20 blur-sm"></div>
        
        <div className="relative z-10">
          <div className="flex flex-col lg:flex-row justify-between items-start lg:items-center">
            <div className="mb-6 lg:mb-0">
              <div className="flex items-center mb-4">
                <div className="bg-gradient-to-r from-gray-600 to-gray-400 backdrop-blur-sm rounded-full p-3 mr-4 border border-gray-500">
                  <span className="text-3xl">üëã</span>
                </div>
                <div>
                  <h1 className="text-4xl lg:text-5xl font-bold mb-2 bg-gradient-to-r from-gray-100 via-white to-gray-300 bg-clip-text text-transparent">
                    ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ {userData.name}!
                  </h1>
                  <div className="flex items-center space-x-4 text-gray-300">
                    <span className="flex items-center">
                      <span className="w-2 h-2 bg-gradient-to-r from-green-400 to-emerald-500 rounded-full mr-2 animate-pulse"></span>
                      ‡∏£‡∏∞‡∏î‡∏±‡∏ö: {userData.level}
                    </span>
                    <span>‚Ä¢</span>
                    <span>‡∏ó‡∏µ‡∏°: {userData.teamSize} ‡∏Ñ‡∏ô</span>
                  </div>
                </div>
              </div>
            </div>
            
            <div className="text-center lg:text-right">
              <p className="text-gray-400 mb-2">‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</p>
              <div className="bg-gradient-to-r from-gray-800 to-black backdrop-blur-sm rounded-2xl p-4 border border-gray-600">
                <p className="text-4xl lg:text-5xl font-bold text-transparent bg-gradient-to-r from-gray-100 via-white to-gray-200 bg-clip-text">
                  {userData.totalEarning.toLocaleString()} ‡∏ø
                </p>
                <p className="text-green-400 text-sm mt-1">+12.5% ‡∏à‡∏≤‡∏Å‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß</p>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Modern Stats Grid */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        {/* Monthly Earning Card */}
        <div className="group bg-gradient-to-br from-gray-900 to-black rounded-2xl p-6 shadow-2xl hover:shadow-gray-500/20 transform hover:-translate-y-2 transition-all duration-300 border border-gray-700">
          <div className="flex items-center justify-between mb-4">
            <div className="bg-gradient-to-r from-green-500 to-emerald-600 p-3 rounded-xl shadow-lg">
              <span className="text-2xl">üí∞</span>
            </div>
            <div className="text-right">
              <div className="flex items-center text-green-400 text-sm">
                <span className="mr-1">‚Üó</span>
                +8.2%
              </div>
            </div>
          </div>
          <p className="text-gray-400 mb-1">‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ô‡∏µ‡πâ</p>
          <p className="text-3xl font-bold bg-gradient-to-r from-white to-gray-300 bg-clip-text text-transparent">
            {userData.monthlyEarning.toLocaleString()} ‡∏ø
          </p>
          <div className="mt-4 bg-gray-800 rounded-full h-2">
            <div className="bg-gradient-to-r from-green-400 to-emerald-500 h-2 rounded-full shadow-lg" style={{width: '68%'}}></div>
          </div>
        </div>

        {/* Direct Referrals Card */}
        <div className="group bg-gradient-to-br from-gray-900 to-black rounded-2xl p-6 shadow-2xl hover:shadow-gray-500/20 transform hover:-translate-y-2 transition-all duration-300 border border-gray-700">
          <div className="flex items-center justify-between mb-4">
            <div className="bg-gradient-to-r from-blue-500 to-cyan-600 p-3 rounded-xl shadow-lg">
              <span className="text-2xl">üë•</span>
            </div>
            <div className="text-right">
              <div className="flex items-center text-blue-400 text-sm">
                <span className="mr-1">‚Üó</span>
                +3 ‡∏Ñ‡∏ô
              </div>
            </div>
          </div>
          <p className="text-gray-400 mb-1">‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ï‡∏£‡∏á</p>
          <p className="text-3xl font-bold bg-gradient-to-r from-white to-gray-300 bg-clip-text text-transparent">{userData.directReferrals} ‡∏Ñ‡∏ô</p>
          <div className="mt-4 flex space-x-1">
            {Array.from({length: 5}).map((_, i) => (
              <div key={i} className={`w-2 h-8 rounded-full ${i < 3 ? 'bg-gradient-to-t from-blue-500 to-cyan-600 shadow-lg' : 'bg-gray-700'}`}></div>
            ))}
          </div>
        </div>

        {/* Left PV Card */}
        <div className="group bg-gradient-to-br from-gray-900 to-black rounded-2xl p-6 shadow-2xl hover:shadow-gray-500/20 transform hover:-translate-y-2 transition-all duration-300 border border-gray-700">
          <div className="flex items-center justify-between mb-4">
            <div className="bg-gradient-to-r from-purple-500 to-pink-600 p-3 rounded-xl shadow-lg">
              <span className="text-2xl">üìä</span>
            </div>
            <div className="text-right">
              <div className="flex items-center text-purple-400 text-sm">
                <span className="mr-1">‚Üó</span>
                +5.2%
              </div>
            </div>
          </div>
          <p className="text-gray-400 mb-1">PV ‡∏ù‡∏±‡πà‡∏á‡∏ã‡πâ‡∏≤‡∏¢</p>
          <p className="text-3xl font-bold bg-gradient-to-r from-white to-gray-300 bg-clip-text text-transparent">{userData.leftPV.toLocaleString()}</p>
          <div className="mt-4">
            <div className="flex justify-between text-sm text-gray-400 mb-1">
              <span>Progress</span>
              <span>85%</span>
            </div>
            <div className="bg-gray-800 rounded-full h-2">
              <div className="bg-gradient-to-r from-purple-500 to-pink-600 h-2 rounded-full shadow-lg" style={{width: '85%'}}></div>
            </div>
          </div>
        </div>

        {/* Right PV Card */}
        <div className="group bg-gradient-to-br from-gray-900 to-black rounded-2xl p-6 shadow-2xl hover:shadow-gray-500/20 transform hover:-translate-y-2 transition-all duration-300 border border-gray-700">
          <div className="flex items-center justify-between mb-4">
            <div className="bg-gradient-to-r from-orange-500 to-red-600 p-3 rounded-xl shadow-lg">
              <span className="text-2xl">üìà</span>
            </div>
            <div className="text-right">
              <div className="flex items-center text-orange-400 text-sm">
                <span className="mr-1">‚Üó</span>
                +3.1%
              </div>
            </div>
          </div>
          <p className="text-gray-400 mb-1">PV ‡∏ù‡∏±‡πà‡∏á‡∏Ç‡∏ß‡∏≤</p>
          <p className="text-3xl font-bold bg-gradient-to-r from-white to-gray-300 bg-clip-text text-transparent">{userData.rightPV.toLocaleString()}</p>
          <div className="mt-4">
            <div className="flex justify-between text-sm text-gray-400 mb-1">
              <span>Progress</span>
              <span>67%</span>
            </div>
            <div className="bg-gray-800 rounded-full h-2">
              <div className="bg-gradient-to-r from-orange-500 to-red-600 h-2 rounded-full shadow-lg" style={{width: '67%'}}></div>
            </div>
          </div>
        </div>
      </div>

      {/* Advanced Analytics Grid */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
        {/* Interactive Binary Tree */}
        <div className="bg-gradient-to-br from-gray-900 to-black rounded-3xl p-8 shadow-2xl border border-gray-700">
          <div className="flex items-center justify-between mb-8">
            <h3 className="text-2xl font-bold bg-gradient-to-r from-white to-gray-300 bg-clip-text text-transparent">Binary Tree Overview</h3>
            <div className="flex space-x-2">
              <div className="w-3 h-3 bg-gradient-to-r from-green-400 to-emerald-500 rounded-full animate-pulse"></div>
              <div className="w-3 h-3 bg-gradient-to-r from-orange-400 to-red-500 rounded-full animate-pulse"></div>
              <div className="w-3 h-3 bg-gradient-to-r from-blue-400 to-cyan-500 rounded-full animate-pulse"></div>
            </div>
          </div>
          
          <div className="relative">
            {/* Connecting Lines */}
            <svg className="absolute inset-0 w-full h-full" style={{zIndex: 1}}>
              <line x1="50%" y1="80" x2="25%" y2="180" stroke="url(#gradient1)" strokeWidth="3" strokeDasharray="5,5">
                <animate attributeName="stroke-dashoffset" values="0;-10" dur="1s" repeatCount="indefinite"/>
              </line>
              <line x1="50%" y1="80" x2="75%" y2="180" stroke="url(#gradient2)" strokeWidth="3" strokeDasharray="5,5">
                <animate attributeName="stroke-dashoffset" values="0;-10" dur="1s" repeatCount="indefinite"/>
              </line>
              <defs>
                <linearGradient id="gradient1" x1="0%" y1="0%" x2="100%" y2="0%">
                  <stop offset="0%" stopColor="#6B7280"/>
                  <stop offset="50%" stopColor="#9CA3AF"/>
                  <stop offset="100%" stopColor="#D1D5DB"/>
                </linearGradient>
                <linearGradient id="gradient2" x1="0%" y1="0%" x2="100%" y2="0%">
                  <stop offset="0%" stopColor="#6B7280"/>
                  <stop offset="50%" stopColor="#9CA3AF"/>
                  <stop offset="100%" stopColor="#D1D5DB"/>
                </linearGradient>
              </defs>
            </svg>
            
            <div className="flex flex-col items-center space-y-12 relative z-10">
              {/* Root Node */}
              <div className="relative group">
                <div className="bg-gradient-to-r from-gray-700 via-gray-600 to-gray-500 text-white rounded-2xl w-24 h-24 flex items-center justify-center font-bold text-lg shadow-2xl transform hover:scale-110 transition-all duration-300 border border-gray-400">
                  <span className="relative z-10">YOU</span>
                  <div className="absolute inset-0 bg-gradient-to-r from-gray-600 via-gray-500 to-gray-400 rounded-2xl blur opacity-75 group-hover:opacity-100 transition-opacity"></div>
                </div>
                <div className="absolute -top-2 -right-2 bg-gradient-to-r from-green-500 to-emerald-600 text-white text-xs rounded-full w-6 h-6 flex items-center justify-center font-bold">
                  {userData.level === 'Basic' ? 'B' : userData.level === 'Agency' ? 'A' : 'S'}
                </div>
              </div>
              
              {/* Level 1 Nodes */}
              <div className="flex space-x-32">
                <div className="text-center group">
                  <div className="relative">
                    <div className="bg-gradient-to-r from-gray-600 to-gray-500 text-white rounded-xl w-20 h-20 flex items-center justify-center font-bold text-lg shadow-xl transform hover:scale-110 transition-all duration-300 border border-gray-400">
                      L
                    </div>
                    <div className="absolute -top-1 -right-1 bg-gradient-to-r from-blue-500 to-cyan-600 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center animate-pulse">
                      6
                    </div>
                  </div>
                  <div className="mt-3 bg-gradient-to-r from-gray-800 to-gray-700 p-3 rounded-lg border border-gray-600">
                    <p className="text-sm font-semibold text-gray-200">PV: {userData.leftPV.toLocaleString()}</p>
                    <p className="text-xs text-gray-400">Active: 6 ‡∏Ñ‡∏ô</p>
                  </div>
                </div>
                
                <div className="text-center group">
                  <div className="relative">
                    <div className="bg-gradient-to-r from-gray-600 to-gray-500 text-white rounded-xl w-20 h-20 flex items-center justify-center font-bold text-lg shadow-xl transform hover:scale-110 transition-all duration-300 border border-gray-400">
                      R
                    </div>
                    <div className="absolute -top-1 -right-1 bg-gradient-to-r from-red-500 to-pink-600 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center animate-pulse">
                      4
                    </div>
                  </div>
                  <div className="mt-3 bg-gradient-to-r from-gray-800 to-gray-700 p-3 rounded-lg border border-gray-600">
                    <p className="text-sm font-semibold text-gray-200">PV: {userData.rightPV.toLocaleString()}</p>
                    <p className="text-xs text-gray-400">Active: 4 ‡∏Ñ‡∏ô</p>
                  </div>
                </div>
              </div>
            </div>
          </div>
          
          {/* Together Bonus Calculation */}
          <div className="mt-8 bg-gradient-to-r from-gray-800 to-black rounded-2xl p-6 border border-gray-600">
            <div className="flex items-center justify-between">
              <div>
                <h4 className="text-lg font-semibold bg-gradient-to-r from-gray-200 to-white bg-clip-text text-transparent">Together Bonus Today</h4>
                <p className="text-sm text-gray-400">
                  {Math.min(userData.leftPV, userData.rightPV).toLocaleString()} √ó 10%
                </p>
              </div>
              <div className="text-right">
                <p className="text-3xl font-bold bg-gradient-to-r from-emerald-400 to-green-500 bg-clip-text text-transparent">
                  {(Math.min(userData.leftPV, userData.rightPV) * 0.1).toLocaleString()} ‡∏ø
                </p>
                <p className="text-sm text-green-400">+2,100 ‡∏ø ‡∏à‡∏≤‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ß‡∏≤‡∏ô</p>
              </div>
            </div>
          </div>
        </div>

        {/* Quick Actions & Performance */}
        <div className="space-y-6">
          {/* Performance Chart */}
          <div className="bg-gradient-to-br from-gray-900 to-black rounded-3xl p-8 shadow-2xl border border-gray-700">
            <h3 className="text-2xl font-bold mb-6 bg-gradient-to-r from-white to-gray-300 bg-clip-text text-transparent">Performance This Week</h3>
            <div className="space-y-4">
              {[
                { day: 'Mon', earning: 4200, color: 'from-gray-500 to-gray-400' },
                { day: 'Tue', earning: 3800, color: 'from-gray-400 to-gray-300' },
                { day: 'Wed', earning: 5100, color: 'from-gray-600 to-gray-500' },
                { day: 'Thu', earning: 4600, color: 'from-gray-500 to-gray-400' },
                { day: 'Fri', earning: 5400, color: 'from-gray-400 to-gray-300' },
                { day: 'Sat', earning: 6200, color: 'from-gray-300 to-gray-200' },
                { day: 'Sun', earning: 4900, color: 'from-gray-500 to-gray-400' }
              ].map((item, idx) => (
                <div key={idx} className="flex items-center space-x-4">
                  <span className="text-sm font-medium w-8 text-gray-300">{item.day}</span>
                  <div className="flex-1 bg-gray-800 rounded-full h-3 relative overflow-hidden">
                    <div 
                      className={`bg-gradient-to-r ${item.color} h-3 rounded-full transition-all duration-1000 ease-out shadow-lg`}
                      style={{width: `${(item.earning / 6200) * 100}%`}}
                    ></div>
                  </div>
                  <span className="text-sm font-semibold w-16 text-right text-gray-300">
                    {item.earning.toLocaleString()} ‡∏ø
                  </span>
                </div>
              ))}
            </div>
          </div>

          {/* Quick Actions */}
          <div className="bg-gradient-to-br from-gray-900 to-black rounded-3xl p-8 shadow-2xl border border-gray-700">
            <h3 className="text-2xl font-bold mb-6 bg-gradient-to-r from-white to-gray-300 bg-clip-text text-transparent">Quick Actions</h3>
            <div className="grid grid-cols-2 gap-4">
              <button className="bg-gradient-to-r from-gray-700 to-gray-600 hover:from-gray-600 hover:to-gray-500 text-white p-4 rounded-xl transform hover:scale-105 transition-all duration-200 shadow-lg border border-gray-500">
                <span className="text-2xl mb-2 block">üéØ</span>
                <span className="text-sm font-medium">‡πÄ‡∏ä‡∏¥‡∏ç‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô</span>
              </button>
              <button className="bg-gradient-to-r from-gray-700 to-gray-600 hover:from-gray-600 hover:to-gray-500 text-white p-4 rounded-xl transform hover:scale-105 transition-all duration-200 shadow-lg border border-gray-500">
                <span className="text-2xl mb-2 block">üìä</span>
                <span className="text-sm font-medium">‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô</span>
              </button>
              <button className="bg-gradient-to-r from-gray-700 to-gray-600 hover:from-gray-600 hover:to-gray-500 text-white p-4 rounded-xl transform hover:scale-105 transition-all duration-200 shadow-lg border border-gray-500">
                <span className="text-2xl mb-2 block">üí∞</span>
                <span className="text-sm font-medium">‡∏ñ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô</span>
              </button>
              <button className="bg-gradient-to-r from-gray-700 to-gray-600 hover:from-gray-600 hover:to-gray-500 text-white p-4 rounded-xl transform hover:scale-105 transition-all duration-200 shadow-lg border border-gray-500">
                <span className="text-2xl mb-2 block">üõçÔ∏è</span>
                <span className="text-sm font-medium">‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</span>
              </button>
            </div>
          </div>
        </div>
      </div>

      {/* Advanced Activity Feed */}
      <div className="bg-gradient-to-br from-gray-900 to-black rounded-3xl p-8 shadow-2xl border border-gray-700">
        <div className="flex items-center justify-between mb-8">
          <h3 className="text-2xl font-bold bg-gradient-to-r from-white to-gray-300 bg-clip-text text-transparent">Live Activity Feed</h3>
          <div className="flex items-center space-x-2">
            <div className="w-2 h-2 bg-gradient-to-r from-green-400 to-emerald-500 rounded-full animate-pulse"></div>
            <span className="text-sm text-gray-400">Live</span>
          </div>
        </div>
        
        <div className="space-y-4">
          {notifications.map((notif, idx) => (
            <div key={notif.id} className="group flex items-start space-x-4 p-4 bg-gradient-to-r from-gray-800 to-gray-700 rounded-2xl hover:from-gray-700 hover:to-gray-600 transition-all duration-200 border border-gray-600">
              <div className={`w-10 h-10 rounded-full flex items-center justify-center ${
                notif.type === 'earning' 
                  ? 'bg-gradient-to-r from-green-500 to-emerald-600' 
                  : 'bg-gradient-to-r from-blue-500 to-cyan-600'
              } shadow-lg`}>
                <span className="text-white text-lg">
                  {notif.type === 'earning' ? 'üí∞' : 'üë•'}
                </span>
              </div>
              <div className="flex-1">
                <p className="text-gray-200 font-medium">{notif.message}</p>
                <div className="flex items-center space-x-3 mt-1">
                  <p className="text-sm text-gray-400">{notif.time}</p>
                  <span className={`text-xs px-2 py-1 rounded-full ${
                    notif.type === 'earning' 
                      ? 'bg-gradient-to-r from-green-800 to-green-700 text-green-200 border border-green-600' 
                      : 'bg-gradient-to-r from-blue-800 to-blue-700 text-blue-200 border border-blue-600'
                  }`}>
                    {notif.type === 'earning' ? '‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ' : '‡∏ó‡∏µ‡∏°'}
                  </span>
                </div>
              </div>
              <div className="opacity-0 group-hover:opacity-100 transition-opacity">
                <button className="text-gray-500 hover:text-gray-300">
                  <span className="text-lg">‚ãØ</span>
                </button>
              </div>
            </div>
          ))}
        </div>
        
        <div className="mt-6 text-center">
          <button className="text-gray-400 hover:text-gray-200 font-medium transition-colors">
            ‡∏î‡∏π‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‚Üí
          </button>
        </div>
      </div>
    </div>
  );

  // Calculator Component
  const Calculator = () => (
    <div className="space-y-6">
      <div className="bg-white dark:bg-gray-800 rounded-2xl p-6 shadow-lg">
        <h2 className="text-2xl font-bold mb-6 dark:text-white">üí∞ ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ</h2>
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          {/* Input Section */}
          <div className="space-y-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ï‡∏£‡∏á
              </label>
              <input
                type="number"
                value={calcData.directMembers}
                onChange={(e) => setCalcData({...calcData, directMembers: parseInt(e.target.value) || 0})}
                className="w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg dark:bg-gray-700 dark:text-white"
              />
            </div>
            
            <div>
              <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                PV ‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏ï‡πà‡∏≠‡∏Ñ‡∏ô (‡∏ö‡∏≤‡∏ó)
              </label>
              <input
                type="number"
                value={calcData.avgPV}
                onChange={(e) => setCalcData({...calcData, avgPV: parseInt(e.target.value) || 0})}
                className="w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg dark:bg-gray-700 dark:text-white"
              />
            </div>
            
            <div>
              <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                PV ‡∏ù‡∏±‡πà‡∏á‡∏ã‡πâ‡∏≤‡∏¢
              </label>
              <input
                type="number"
                value={calcData.leftPV}
                onChange={(e) => setCalcData({...calcData, leftPV: parseInt(e.target.value) || 0})}
                className="w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg dark:bg-gray-700 dark:text-white"
              />
            </div>
            
            <div>
              <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                PV ‡∏ù‡∏±‡πà‡∏á‡∏Ç‡∏ß‡∏≤
              </label>
              <input
                type="number"
                value={calcData.rightPV}
                onChange={(e) => setCalcData({...calcData, rightPV: parseInt(e.target.value) || 0})}
                className="w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg dark:bg-gray-700 dark:text-white"
              />
            </div>
            
            <div>
              <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
              </label>
              <select
                value={calcData.level}
                onChange={(e) => setCalcData({...calcData, level: e.target.value})}
                className="w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg dark:bg-gray-700 dark:text-white"
              >
                <option value="Basic">Basic</option>
                <option value="Agency">Agency</option>
                <option value="Stockist">Stockist</option>
              </select>
            </div>
          </div>
          
          {/* Results Section */}
          <div className="space-y-4">
            <div className="bg-gradient-to-r from-blue-50 to-cyan-50 dark:from-blue-900 dark:to-cyan-900 p-4 rounded-lg">
              <h4 className="font-semibold text-blue-800 dark:text-blue-200 mb-2">1. Tell Your Bonus</h4>
              <p className="text-2xl font-bold text-blue-600 dark:text-blue-400">
                {(calcData.directMembers * calcData.avgPV * 0.3).toLocaleString()} ‡∏ø
              </p>
              <p className="text-sm text-gray-600 dark:text-gray-400">
                {calcData.directMembers} ‡∏Ñ‡∏ô √ó {calcData.avgPV} √ó 30%
              </p>
            </div>
            
            <div className="bg-gradient-to-r from-purple-50 to-pink-50 dark:from-purple-900 dark:to-pink-900 p-4 rounded-lg">
              <h4 className="font-semibold text-purple-800 dark:text-purple-200 mb-2">2. Together Bonus</h4>
              <p className="text-2xl font-bold text-purple-600 dark:text-purple-400">
                {(Math.min(calcData.leftPV, calcData.rightPV) * 0.1).toLocaleString()} ‡∏ø
              </p>
              <p className="text-sm text-gray-600 dark:text-gray-400">
                {Math.min(calcData.leftPV, calcData.rightPV).toLocaleString()} √ó 10%
              </p>
            </div>
            
            <div className="bg-gradient-to-r from-green-50 to-emerald-50 dark:from-green-900 dark:to-emerald-900 p-4 rounded-lg">
              <h4 className="font-semibold text-green-800 dark:text-green-200 mb-2">‡∏£‡∏ß‡∏°‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô</h4>
              <p className="text-3xl font-bold text-green-600 dark:text-green-400">
                {((calcData.directMembers * calcData.avgPV * 0.3) + (Math.min(calcData.leftPV, calcData.rightPV) * 0.1)).toLocaleString()} ‡∏ø
              </p>
            </div>
            
            <div className="bg-gradient-to-r from-yellow-50 to-orange-50 dark:from-yellow-900 dark:to-orange-900 p-4 rounded-lg">
              <h4 className="font-semibold text-yellow-800 dark:text-yellow-200 mb-2">‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏ï‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô (30 ‡∏ß‡∏±‡∏ô)</h4>
              <p className="text-3xl font-bold text-yellow-600 dark:text-yellow-400">
                {(((calcData.directMembers * calcData.avgPV * 0.3) + (Math.min(calcData.leftPV, calcData.rightPV) * 0.1)) * 30).toLocaleString()} ‡∏ø
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );

  // Marketing Plan Component
  const MarketingPlan = () => (
    <div className="space-y-6">
      {/* Plan Cards */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {planData.map((plan) => (
          <div key={plan.id} className="group">
            <div className="bg-white dark:bg-gray-800 rounded-2xl overflow-hidden shadow-lg hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2">
              <div className={`bg-gradient-to-r ${plan.color} p-6 text-white`}>
                <div className="flex items-center justify-between mb-4">
                  <span className="text-4xl">{plan.icon}</span>
                  <span className="text-2xl font-bold">{plan.percentage}</span>
                </div>
                <h3 className="text-xl font-bold">{plan.title}</h3>
                <p className="text-sm opacity-90">{plan.subtitle}</p>
              </div>
              <div className="p-6">
                <p className="text-gray-600 dark:text-gray-300">{plan.description}</p>
                <button className="mt-4 w-full bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 text-gray-800 dark:text-gray-200 py-2 px-4 rounded-lg transition-colors">
                  ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
                </button>
              </div>
            </div>
          </div>
        ))}
      </div>

      {/* Detailed Plan */}
      <div className="bg-white dark:bg-gray-800 rounded-2xl p-6 shadow-lg">
        <h2 className="text-2xl font-bold mb-6 dark:text-white">üìã ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏•‡∏≤‡∏î</h2>
        
        <div className="space-y-6">
          {/* Level Comparison Table */}
          <div className="overflow-x-auto">
            <table className="w-full border-collapse">
              <thead>
                <tr className="bg-gradient-to-r from-gray-100 to-gray-200 dark:from-gray-700 dark:to-gray-600">
                  <th className="border border-gray-300 dark:border-gray-600 px-4 py-3 text-left dark:text-white">‡∏£‡∏∞‡∏î‡∏±‡∏ö</th>
                  <th className="border border-gray-300 dark:border-gray-600 px-4 py-3 text-left dark:text-white">‡πÄ‡∏û‡∏î‡∏≤‡∏ô Together Bonus</th>
                  <th className="border border-gray-300 dark:border-gray-600 px-4 py-3 text-left dark:text-white">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th>
                </tr>
              </thead>
              <tbody>
                <tr className="hover:bg-gray-50 dark:hover:bg-gray-700">
                  <td className="border border-gray-300 dark:border-gray-600 px-4 py-3 font-medium text-blue-600 dark:text-blue-400">Basic</td>
                  <td className="border border-gray-300 dark:border-gray-600 px-4 py-3 dark:text-gray-300">390 ‡∏ö‡∏≤‡∏ó/‡∏ß‡∏±‡∏ô</td>
                  <td className="border border-gray-300 dark:border-gray-600 px-4 py-3">
                    <span className="bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200 px-2 py-1 rounded-full text-xs">‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô</span>
                  </td>
                </tr>
                <tr className="hover:bg-gray-50 dark:hover:bg-gray-700">
                  <td className="border border-gray-300 dark:border-gray-600 px-4 py-3 font-medium text-purple-600 dark:text-purple-400">Agency</td>
                  <td className="border border-gray-300 dark:border-gray-600 px-4 py-3 dark:text-gray-300">3,900 ‡∏ö‡∏≤‡∏ó/‡∏ß‡∏±‡∏ô</td>
                  <td className="border border-gray-300 dark:border-gray-600 px-4 py-3">
                    <span className="bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 px-2 py-1 rounded-full text-xs">‡∏Å‡∏•‡∏≤‡∏á</span>
                  </td>
                </tr>
                <tr className="hover:bg-gray-50 dark:hover:bg-gray-700">
                  <td className="border border-gray-300 dark:border-gray-600 px-4 py-3 font-medium text-red-600 dark:text-red-400">Stockist</td>
                  <td className="border border-gray-300 dark:border-gray-600 px-4 py-3 dark:text-gray-300">39,000 ‡∏ö‡∏≤‡∏ó/‡∏ß‡∏±‡∏ô</td>
                  <td className="border border-gray-300 dark:border-gray-600 px-4 py-3">
                    <span className="bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-200 px-2 py-1 rounded-full text-xs">‡∏™‡∏π‡∏á</span>
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  );

  // Team Component
  const Team = () => (
    <div className="space-y-6">
      <div className="bg-white dark:bg-gray-800 rounded-2xl p-6 shadow-lg">
        <h2 className="text-2xl font-bold mb-6 dark:text-white">üë• ‡∏ó‡∏µ‡∏°‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô</h2>
        
        {/* Team Stats */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-6">
          <div className="bg-gradient-to-r from-blue-50 to-cyan-50 dark:from-blue-900 dark:to-cyan-900 p-4 rounded-lg">
            <h4 className="font-semibold text-blue-800 dark:text-blue-200">‡∏ó‡∏µ‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</h4>
            <p className="text-3xl font-bold text-blue-600 dark:text-blue-400">{userData.teamSize} ‡∏Ñ‡∏ô</p>
          </div>
          <div className="bg-gradient-to-r from-green-50 to-emerald-50 dark:from-green-900 dark:to-emerald-900 p-4 rounded-lg">
            <h4 className="font-semibold text-green-800 dark:text-green-200">‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ô‡∏µ‡πâ</h4>
            <p className="text-3xl font-bold text-green-600 dark:text-green-400">8 ‡∏Ñ‡∏ô</p>
          </div>
          <div className="bg-gradient-to-r from-purple-50 to-pink-50 dark:from-purple-900 dark:to-pink-900 p-4 rounded-lg">
            <h4 className="font-semibold text-purple-800 dark:text-purple-200">Active Members</h4>
            <p className="text-3xl font-bold text-purple-600 dark:text-purple-400">89%</p>
          </div>
        </div>

        {/* Team List */}
        <div className="space-y-3">
          <h3 className="text-lg font-semibold dark:text-white">‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ï‡∏£‡∏á</h3>
          {[
            { name: '‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏°‡∏≤‡∏•‡∏µ ‡πÉ‡∏à‡∏î‡∏µ', level: 'Basic', pv: 1200, status: 'active' },
            { name: '‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏®‡∏±‡∏Å‡∏î‡∏¥‡πå ‡∏£‡∏ß‡∏¢‡πÄ‡∏£‡πá‡∏ß', level: 'Agency', pv: 5600, status: 'active' },
            { name: '‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á ‡πÄ‡∏Å‡πà‡∏á‡∏°‡∏≤‡∏Å', level: 'Basic', pv: 800, status: 'inactive' },
            { name: '‡∏ô‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡πÄ‡∏™‡∏£‡∏¥‡∏ê ‡∏Å‡πâ‡∏≤‡∏ß‡∏´‡∏ô‡πâ‡∏≤', level: 'Stockist', pv: 12000, status: 'active' }
          ].map((member, idx) => (
            <div key={idx} className="flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700 rounded-lg">
              <div className="flex items-center space-x-4">
                <div className="w-10 h-10 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full flex items-center justify-center text-white font-bold">
                  {member.name.charAt(0)}
                </div>
                <div>
                  <h4 className="font-medium dark:text-white">{member.name}</h4>
                  <p className="text-sm text-gray-500 dark:text-gray-400">Level: {member.level}</p>
                </div>
              </div>
              <div className="text-right">
                <p className="font-semibold dark:text-white">{member.pv.toLocaleString()} PV</p>
                <span className={`text-xs px-2 py-1 rounded-full ${
                  member.status === 'active' 
                    ? 'bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200' 
                    : 'bg-gray-100 dark:bg-gray-600 text-gray-800 dark:text-gray-300'
                }`}>
                  {member.status === 'active' ? 'Active' : 'Inactive'}
                </span>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  );

  // Navigation Menu
  const menuItems = [
    { id: 'dashboard', name: '‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î', icon: 'üè†' },
    { id: 'calculator', name: '‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ', icon: 'üßÆ' },
    { id: 'plan', name: '‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏•‡∏≤‡∏î', icon: 'üìä' },
    { id: 'team', name: '‡∏ó‡∏µ‡∏°', icon: 'üë•' }
  ];

  return (
    <div className={`min-h-screen transition-colors duration-300 bg-gradient-to-br from-gray-900 via-black to-gray-800`}>
      {/* Header */}
      <header className="bg-gradient-to-r from-gray-900 to-black shadow-2xl sticky top-0 z-50 transition-colors duration-300 border-b border-gray-700">
        <div className="container mx-auto px-6 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-4">
              <div className="bg-gradient-to-r from-gray-600 to-gray-500 text-white rounded-full w-12 h-12 flex items-center justify-center font-bold border border-gray-400">
                SE
              </div>
              <div>
                <h1 className="text-2xl font-bold bg-gradient-to-r from-white to-gray-300 bg-clip-text text-transparent">SoEasy Network</h1>
                <p className="text-sm text-gray-400">‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢‡∏ï‡∏£‡∏á‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏á‡πà‡∏≤‡∏¢‡∏Ç‡∏∂‡πâ‡∏ô</p>
              </div>
            </div>
            
            <div className="flex items-center space-x-4">
              {/* Dark Mode Toggle */}
              <button
                onClick={() => setDarkMode(!darkMode)}
                className="p-2 rounded-lg bg-gray-800 hover:bg-gray-700 transition-colors border border-gray-600"
              >
                {darkMode ? '‚òÄÔ∏è' : 'üåô'}
              </button>
              
              {/* Notifications */}
              <div className="relative">
                <button className="p-2 rounded-lg bg-gray-800 hover:bg-gray-700 transition-colors border border-gray-600">
                  üîî
                </button>
                <span className="absolute -top-1 -right-1 bg-gradient-to-r from-red-500 to-pink-600 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center">
                  {notifications.length}
                </span>
              </div>
              
              {/* Profile */}
              <div className="flex items-center space-x-2">
                <div className="w-10 h-10 bg-gradient-to-r from-gray-600 to-gray-500 rounded-full flex items-center justify-center text-white font-bold border border-gray-400">
                  {userData.name.charAt(0)}
                </div>
                <div className="hidden md:block">
                  <p className="text-sm font-medium text-white">{userData.name}</p>
                  <p className="text-xs text-gray-400">{userData.level}</p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </header>

      <div className="container mx-auto px-6 py-8">
        <div className="flex flex-col lg:flex-row gap-8">
          {/* Sidebar Navigation */}
          <div className="lg:w-64">
            <nav className="bg-gradient-to-br from-gray-900 to-black rounded-2xl p-4 shadow-2xl sticky top-24 border border-gray-700">
              <ul className="space-y-2">
                {menuItems.map((item) => (
                  <li key={item.id}>
                    <button
                      onClick={() => setCurrentPage(item.id)}
                      className={`w-full flex items-center space-x-3 px-4 py-3 rounded-xl transition-all duration-200 ${
                        currentPage === item.id
                          ? 'bg-gradient-to-r from-gray-700 to-gray-600 text-white shadow-lg border border-gray-500'
                          : 'text-gray-300 hover:bg-gray-800 hover:text-white'
                      }`}
                    >
                      <span className="text-xl">{item.icon}</span>
                      <span className="font-medium">{item.name}</span>
                    </button>
                  </li>
                ))}
              </ul>
            </nav>
          </div>

          {/* Main Content */}
          <div className="flex-1">
            {currentPage === 'dashboard' && <Dashboard />}
            {currentPage === 'calculator' && <Calculator />}
            {currentPage === 'plan' && <MarketingPlan />}
            {currentPage === 'team' && <Team />}
          </div>
        </div>
      </div>

      {/* Footer */}
      <footer className="bg-white dark:bg-gray-800 mt-16 transition-colors duration-300">
        <div className="container mx-auto px-6 py-8">
          <div className="text-center">
            <div className="flex items-center justify-center space-x-4 mb-4">
              <div className="bg-gradient-to-r from-blue-500 to-purple-500 text-white rounded-full w-12 h-12 flex items-center justify-center font-bold">
                SE
              </div>
              <div>
                <h3 className="text-xl font-bold dark:text-white">SoEasy Network</h3>
                <p className="text-gray-500 dark:text-gray-400">‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢‡∏ï‡∏£‡∏á‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏á‡πà‡∏≤‡∏¢‡∏Ç‡∏∂‡πâ‡∏ô</p>
              </div>
            </div>
            <div className="border-t border-gray-200 dark:border-gray-700 pt-4">
              <p className="text-sm text-gray-500 dark:text-gray-400">
                &copy; 2025 SoEasy Network. ‡∏™‡∏á‡∏ß‡∏ô‡∏•‡∏¥‡∏Ç‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ó‡∏∏‡∏Å‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏£ | ‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏î‡πâ‡∏ß‡∏¢ ‚ù§Ô∏è ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤
              </p>
            </div>
          </div>
        </div>
      </footer>
    </div>
  );
}
